[{"name": "app.py", "content": "import plotly.express as px\nfrom shiny.express import input, ui\nfrom shiny import render\nfrom shinywidgets import render_plotly\nfrom palmerpenguins import load_penguins\nfrom shinywidgets import output_widget, render_widget, render_plotly\nimport seaborn as sns\nfrom shiny import render \nimport palmerpenguins\nfrom shiny import reactive\n\npenguins_df = palmerpenguins.load_penguins()\n\nwith ui.layout_columns():\n    with ui.card():\n        \" Penguin Data Table \"\n        @render.data_frame\n        def penguinstable_df():\n            return render.DataTable(filtered_data(), filters=False,selection_mode='row')\n        \n\n    with ui.card():\n        \"Penguins Data Grid\"\n        @render.data_frame\n        def penguinsgrid_df():\n            return render.DataGrid(filtered_data(), filters=False, selection_mode=\"row\")\n\n\nwith ui.sidebar(open=\"open\"):\n    ui.h2(\"Sidebar\")\n    ui.input_selectize(\"selected_attribute\",\n                       \"Penguin Metric\",\n                       [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"])\n\n    ui.input_numeric(\n        \"plotly_bin_count\",\n        \"Plotly Number of Bins\",\n        20\n    )\n\n    ui.input_slider(\n        \"seaborn_bin_count\",\n        \"Seaborn Number of Bins\",\n        1,20,10\n    )\n\n    ui.input_checkbox_group(\n        \"selected_species_list\",\n        \"Species\",\n        [\"Adelie\",\"Gentoo\",\"Chinstrap\"],\n        selected=[\"Adelie\",\"Gentoo\",\"Chinstrap\"],\n        inline=False\n    )\n\n    ui.hr()\n\n    ui.a(\n        \"GitHub\",\n        href= \"https://github.com/Thilde02/cintel-02-data.git\",\n        target=\"_blank\"\n    )\n\nui.page_opts(title=\"Tiffany's Penguin Data playground\", fillable=True)\nwith ui.layout_columns():\n\n    @render_plotly\n    def plot1():\n\n        fig = px.histogram(\n            penguins_df,\n            x=\"bill_length_mm\",\n            title=\"Penguins Bill Length Histogram\",\n            color_discrete_sequence=[\"orange\"],\n        )\n        fig.update_traces(marker_line_color=\"black\", marker_line_width=2)\n        return fig\n\n    @render_plotly\n   \n    def plot2():\n        selected_attribute = input.selected_attribute()\n        bin_count = input.plotly_bin_count()\n        \n        fig = px.histogram(\n            filtered_data(),\n            x=selected_attribute,\n            nbins=bin_count,\n            title=f\"Penguins {selected_attribute} Histogram\",\n            color_discrete_sequence=[\"black\"], \n        )\n        fig.update_traces(marker_line_color=\"white\", marker_line_width=2)\n        return fig\n\nwith ui.card(full_screen=True):\n\n    ui.card_header(\"Plotly Scatterplot: Species\")\n    @render_plotly\n    def plotly_scatterplot():\n        filtered_penguins = filtered_data()[\n                penguins_df[\"species\"].isin(input.selected_species_list())\n            ]\n        fig = px.scatter(\n                filtered_penguins,\n                x=\"body_mass_g\",\n                y=\"flipper_length_mm\",\n                color=\"species\",\n                title=\"Penguins Scatterplot: Body Mass vs. Flipper Length\",\n                labels={\n                    \"body_mass_g\": \"Body Mass (g)\",\n                    \"flipper_length_mm\": \"Flipper Length (mm)\",\n                },\n            )\n        return fig\n    \n    @render_plotly\n    def density_plot():\n        filtered_penguins = filtered_data()[\n            filtered_datat()[\"species\"].isin(input.selected_species_list())\n        ]\n        fig = px.density_contour(\n            filtered_penguins,\n            \n            x=\"bill_length_mm\",\n            y=\"bill_depth_mm\",\n            color=\"species\",\n            title=\"Density Plot: Bill Length vs Bill Depth by Species\",\n            labels={\n                \"bill_length_mm\": \"Bill Length (mm)\",\n                \"bill_depth_mm\": \"Bill Depth (mm)\"\n            }\n        )\n        return fig\n\nwith ui.layout_columns():\n    with ui.card():\n        @render.plot(alt=\"Seaborn Histogram\")\n        def plot():\n            ax=sns.histplot(data=penguins_df,x=\"flipper_length_mm\",bins=input.seaborn_bin_count())\n            ax.set_title(\"Seaborn: Palmer Penguins\")\n            ax.set_xlabel(\"flipper_length_mm\")\n            ax.set_ylabel(\"Count\")\n            return ax\n\n@reactive.calc\ndef filtered_data():\n    return penguins_df\n\n#Data Table and Data Grid\nwith ui.layout_columns():\n    with ui.card(full_screen=True):\n        ui.h2(\"Penguin Data Table\")\n        @render.data_frame\n        def penguins_datatable():\n            return render.DataTable(filtered_data())\n\n    with ui.card(full_screen=True):\n        ui.h2(\"Penguin Data Grid\")\n        @render.data_frame\n        def penguins_datagrid():\n            return render.DataGrid(filtered_data())\n", "type": "text"}]